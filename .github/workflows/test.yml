name: Build

on:
  push:
  pull_request:

jobs:

#  test-ubuntu:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      # Installing swipl on Debian: https://www.swi-prolog.org/build/PPA.html
#      - name: Install swi-prolog
#        run: |
#          sudo apt-add-repository ppa:swi-prolog/stable
#          sudo apt-get update
#          sudo apt-get install swi-prolog
#
#      - name: Build
#        run: make
#
#  test-macos:
#    runs-on: macos-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      # Installing swipl on macOS: https://www.swi-prolog.org/build/macos.html
#      - name: Install swi-prolog
#        run: brew install swi-prolog
#
#      - name: Build
#        run: make

  test-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install swi-prolog
        run: |
          choco install llvm swi-prolog

          # Add `swipl` to current $PATH. <https://stackoverflow.com/a/46760714>
          Import-Module "$env:ProgramData\chocolatey\helpers\chocolateyInstaller.psm1"
          Update-SessionEnvironment

          # Add `swipl` path to $GITHUB_PATH to make it persist across steps.
          # <https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions>
          echo (Split-Path -Path (Get-Command swipl).Source) `
            | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

          # Set $LIBCLANG_PATH in $GITHUB_ENV to make it persist across steps.
          echo "LIBCLANG_PATH=$(Split-Path -Path (Get-Command clang).Source)" `
            | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Build
        shell: bash
        run: |
          # Confirm that `swipl` works before build.
          swipl --version
          make
